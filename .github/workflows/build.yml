name: Build and Release

on:
  push:
    branches: [main, master]
    tags:
      - 'v*'
  pull_request:
    branches: [main, master]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: ubuntu-latest
            platform: linux
          - os: windows-latest
            platform: win
          - os: macos-latest
            platform: darwin

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linter
        run: pnpm lint

      - name: Build application
        run: pnpm make

      - name: Upload artifacts (Windows)
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: chat-overlay-${{ matrix.platform }}-${{ github.sha }}
          path: |
            out/make/squirrel.windows/x64/*.exe
            out/make/squirrel.windows/x64/*.nupkg
            out/make/squirrel.windows/x64/RELEASES

      - name: Upload artifacts (macOS)
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: chat-overlay-${{ matrix.platform }}-${{ github.sha }}
          path: out/make/zip/darwin/**/*.zip

      - name: Upload artifacts (Linux)
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: chat-overlay-${{ matrix.platform }}-${{ github.sha }}
          path: |
            out/make/deb/x64/*.deb
            out/make/rpm/x64/*.rpm

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload Windows Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/chat-overlay-win-${{ github.sha }}/squirrel.windows/x64/chat-overlay-${{ github.ref_name }}-Setup.exe
          asset_name: chat-overlay-${{ github.ref_name }}-windows-setup.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/chat-overlay-darwin-${{ github.sha }}/zip/darwin/x64/chat-overlay-darwin-x64-${{ github.ref_name }}.zip
          asset_name: chat-overlay-${{ github.ref_name }}-macos.zip
          asset_content_type: application/zip

      - name: Upload Linux DEB Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/chat-overlay-linux-${{ github.sha }}/deb/x64/chat-overlay_${{ github.ref_name }}_amd64.deb
          asset_name: chat-overlay-${{ github.ref_name }}-linux-amd64.deb
          asset_content_type: application/octet-stream

      - name: Upload Linux RPM Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifacts/chat-overlay-linux-${{ github.sha }}/rpm/x64/chat-overlay-${{ github.ref_name }}.x86_64.rpm
          asset_name: chat-overlay-${{ github.ref_name }}-linux-x86_64.rpm
          asset_content_type: application/octet-stream
